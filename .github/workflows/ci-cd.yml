name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    name: 🧪 Testes e Verificações
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 📥 Instalar dependências
      run: npm ci

    - name: 🔍 Verificar imports
      run: npm run check-imports

    - name: 📝 Verificar tipos TypeScript
      run: npm run type-check

    - name: 🧹 Verificar linting
      run: npm run lint

    - name: 🧪 Executar testes
      run: npm run test -- --coverage --watchAll=false

    - name: 📦 Verificar build
      run: npm run build

    - name: 🛡️ Verificar vulnerabilidades críticas
      run: npm audit --audit-level=high --production
      continue-on-error: true

    - name: 📊 Upload coverage para Codecov
      uses: codecov/codecov-action@v3
      if: success()
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  deploy-preview:
    runs-on: ubuntu-latest
    name: 🚀 Deploy Preview (PR)
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4

    - name: 🚀 Deploy para Vercel (Preview)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./

  deploy-production:
    runs-on: ubuntu-latest
    name: 🚀 Deploy Produção
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4

    - name: 🚀 Deploy para Vercel (Produção)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./

  notify:
    runs-on: ubuntu-latest
    name: 📢 Notificações
    needs: [test, deploy-production]
    if: always()
    
    steps:
    - name: 📢 Notificar sucesso
      if: needs.test.result == 'success' && needs.deploy-production.result == 'success'
      run: |
        echo "✅ Deploy realizado com sucesso!"
        echo "🎉 Todas as verificações passaram!"

    - name: 📢 Notificar falha
      if: needs.test.result == 'failure' || needs.deploy-production.result == 'failure'
      run: |
        echo "❌ Deploy falhou!"
        echo "🔍 Verifique os logs para mais detalhes."