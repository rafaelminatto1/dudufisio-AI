[
  {
    "id": "TC001",
    "title": "User Authentication with Valid Credentials",
    "description": "Verify that users can log in successfully using valid credentials including OAuth methods (Google, GitHub) and 2FA.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page"
      },
      {
        "type": "action",
        "description": "Input valid username/email and password"
      },
      {
        "type": "action",
        "description": "If enabled, complete two-factor authentication"
      },
      {
        "type": "action",
        "description": "Click the login button"
      },
      {
        "type": "assertion",
        "description": "Verify user is successfully authenticated and directed to role-based dashboard"
      },
      {
        "type": "action",
        "description": "Attempt login using OAuth via Google"
      },
      {
        "type": "assertion",
        "description": "Verify successful login and session creation"
      },
      {
        "type": "action",
        "description": "Attempt login using OAuth via GitHub"
      },
      {
        "type": "assertion",
        "description": "Verify successful login and session creation"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "User Authentication with Invalid Credentials",
    "description": "Verify that login fails when incorrect credentials are entered and appropriate error messages are shown.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page"
      },
      {
        "type": "action",
        "description": "Input invalid username/email and password"
      },
      {
        "type": "action",
        "description": "Click the login button"
      },
      {
        "type": "assertion",
        "description": "Verify login is denied and an error message is displayed"
      },
      {
        "type": "action",
        "description": "Input valid credentials but fail 2FA verification"
      },
      {
        "type": "assertion",
        "description": "Verify login is denied and an error for 2FA failure is shown"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Role-Based Access Control Enforcement",
    "description": "Verify that users only have access to features and data according to their assigned roles (Administrator, Physiotherapist, Intern, Patient).",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as Administrator"
      },
      {
        "type": "assertion",
        "description": "Verify access to user management, financials, stock, and clinic data"
      },
      {
        "type": "action",
        "description": "Log in as Physiotherapist"
      },
      {
        "type": "assertion",
        "description": "Verify access to patient records, clinical documentation, AI reports, and appointments"
      },
      {
        "type": "action",
        "description": "Log in as Intern"
      },
      {
        "type": "assertion",
        "description": "Verify limited read-only access to patient and scheduling information for observation"
      },
      {
        "type": "action",
        "description": "Log in as Patient"
      },
      {
        "type": "assertion",
        "description": "Verify access to personal records, exercises, appointments, and communication features only"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Prevent Duplicate Patient Records by CPF Validation",
    "description": "Verify the system prevents creation of duplicate patient records using CPF validation and advanced search filters.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to create a new patient record with a CPF that already exists in the system"
      },
      {
        "type": "assertion",
        "description": "Verify that the system blocks duplicate creation and shows an appropriate validation error"
      },
      {
        "type": "action",
        "description": "Search for a patient using advanced filters with partial or similar CPF"
      },
      {
        "type": "assertion",
        "description": "Verify that existing patient records are accurately found and displayed"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Appointment Scheduling with Conflict Prevention and Recurrence",
    "description": "Verify that the appointment system prevents scheduling conflicts and supports recurring appointments with notifications.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Schedule an appointment for a patient with a physiotherapist at a given date and time"
      },
      {
        "type": "assertion",
        "description": "Verify appointment is successfully created and shown on calendar"
      },
      {
        "type": "action",
        "description": "Attempt to schedule another appointment at the same time for the same physiotherapist or patient"
      },
      {
        "type": "assertion",
        "description": "Verify that the system prevents conflict and displays a relevant warning"
      },
      {
        "type": "action",
        "description": "Create a recurring appointment series with defined intervals"
      },
      {
        "type": "assertion",
        "description": "Verify recurring appointments are created correctly without conflicts"
      },
      {
        "type": "assertion",
        "description": "Verify notifications are sent to patient and physiotherapist with appointment details"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Clinical Documentation Auto-Save, Version Control, and Templates",
    "description": "Verify clinical notes support auto-save functionality, maintain version history, and allow template customization.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Create a new clinical note using a predefined template"
      },
      {
        "type": "action",
        "description": "Modify content in the clinical note editor"
      },
      {
        "type": "assertion",
        "description": "Verify content auto-saves periodically without user intervention"
      },
      {
        "type": "action",
        "description": "Make multiple edits and save changes"
      },
      {
        "type": "assertion",
        "description": "Verify version history reflects all changes with timestamps"
      },
      {
        "type": "action",
        "description": "Revert to a previous version of the clinical note"
      },
      {
        "type": "assertion",
        "description": "Verify the clinical note content reverts correctly"
      },
      {
        "type": "action",
        "description": "Customize and save a new template"
      },
      {
        "type": "assertion",
        "description": "Verify the new template is available for future clinical notes"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "AI Assistant Generates Accurate Clinical Reports and Treatment Suggestions",
    "description": "Validate AI-generated clinical reports, treatment protocols, risk analysis, and financial insights meet or exceed 95% accuracy.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Input clinical data and request AI-generated report"
      },
      {
        "type": "assertion",
        "description": "Verify AI report is generated with at least 95% accuracy compared to manual baseline data"
      },
      {
        "type": "action",
        "description": "Request AI treatment protocol suggestions based on patient clinical profile"
      },
      {
        "type": "assertion",
        "description": "Verify treatment suggestions are relevant and meet clinical guidelines"
      },
      {
        "type": "action",
        "description": "Trigger AI risk analysis for a patient"
      },
      {
        "type": "assertion",
        "description": "Verify risk analysis is accurate and coherent with patient data"
      },
      {
        "type": "action",
        "description": "Generate AI financial insights for clinic operations"
      },
      {
        "type": "assertion",
        "description": "Verify financial insights are accurate and actionable"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Exercise Library Prescription with Multimedia and Contraindication Alerts",
    "description": "Verify personalized exercise prescriptions include multimedia content and alert on contraindications.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Select exercises from the library and create a personalized exercise plan"
      },
      {
        "type": "assertion",
        "description": "Verify prescribed exercises include multimedia content (video, images)"
      },
      {
        "type": "action",
        "description": "Introduce a contraindication condition in the patient profile"
      },
      {
        "type": "action",
        "description": "Attempt to include an exercise contraindicated for the patient"
      },
      {
        "type": "assertion",
        "description": "Verify system alerts user about contraindication and prevents prescription"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Secure Patient Portal Access and Data Security",
    "description": "Verify patients can securely access their personal records, exercise plans, schedules, and communications with encrypted data and proper logging.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as patient into the patient portal"
      },
      {
        "type": "assertion",
        "description": "Verify patient can view personal medical records, scheduled appointments, prescribed exercises, and messages"
      },
      {
        "type": "action",
        "description": "Attempt unauthorized access to other patient records"
      },
      {
        "type": "assertion",
        "description": "Verify access is denied and attempts are logged"
      },
      {
        "type": "assertion",
        "description": "Verify all sensitive data is encrypted in transit and storage"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Financial Management and Payment Processing Validation",
    "description": "Verify financial transactions including payments, invoicing, and multiple payment methods (Stripe, Mercado Pago, PIX) are correctly processed and reported.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Create an invoice for a patient consultation"
      },
      {
        "type": "assertion",
        "description": "Verify invoice data is accurate and linked to patient record"
      },
      {
        "type": "action",
        "description": "Process payment using Stripe"
      },
      {
        "type": "assertion",
        "description": "Verify payment is successfully recorded and reflected in financial reports"
      },
      {
        "type": "action",
        "description": "Process payment using Mercado Pago"
      },
      {
        "type": "assertion",
        "description": "Verify payment is successfully recorded and reflected in financial reports"
      },
      {
        "type": "action",
        "description": "Process payment using PIX integration"
      },
      {
        "type": "assertion",
        "description": "Verify PIX payment is processed, logged and correctly displayed in invoices"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Notification System Functionality and Delivery",
    "description": "Verify notifications are sent and received properly via WhatsApp Business, email, SMS, and push notifications with correct content and alerting.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Trigger appointment notification to patient and physiotherapist"
      },
      {
        "type": "assertion",
        "description": "Verify notifications are received via WhatsApp, email, SMS, and push notification"
      },
      {
        "type": "action",
        "description": "Send system alert for medication or exercise reminder"
      },
      {
        "type": "assertion",
        "description": "Verify notifications are timely, accurate and actionable"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Stock Management Alerts and History Tracking",
    "description": "Verify stock for materials and equipment maintains accurate quantities, triggers alerts on low stock, and records history of stock changes.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Add stock items and initial quantities to inventory"
      },
      {
        "type": "action",
        "description": "Consume stock through usage or transfer"
      },
      {
        "type": "assertion",
        "description": "Verify that stock quantities update correctly"
      },
      {
        "type": "action",
        "description": "Reduce stock to below alert threshold"
      },
      {
        "type": "assertion",
        "description": "Verify system triggers low stock alert notification"
      },
      {
        "type": "action",
        "description": "View stock history for a particular item"
      },
      {
        "type": "assertion",
        "description": "Verify history shows accurate records of all stock adjustments"
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Task Management Prioritization, Status Tracking, and Notifications",
    "description": "Verify task creation, prioritization, status updates, and notifications work as intended for clinic staff.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Create new tasks and assign priorities"
      },
      {
        "type": "assertion",
        "description": "Verify tasks display with correct priority ordering"
      },
      {
        "type": "action",
        "description": "Update task statuses (e.g., pending, in-progress, completed)"
      },
      {
        "type": "assertion",
        "description": "Verify statuses update and are visually differentiated"
      },
      {
        "type": "action",
        "description": "Trigger notifications on task assignment or status change"
      },
      {
        "type": "assertion",
        "description": "Verify appropriate users receive notifications timely"
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Compliance with LGPD, Data Encryption, and Audit Logging",
    "description": "Verify that system complies with LGPD data protection regulations, encrypts sensitive data, and logs all data accesses and modifications securely.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Access sensitive patient data as authorized user"
      },
      {
        "type": "assertion",
        "description": "Verify data is encrypted in storage and transit"
      },
      {
        "type": "action",
        "description": "Attempt unauthorized data access"
      },
      {
        "type": "assertion",
        "description": "Verify access is denied and event is logged in audit system"
      },
      {
        "type": "action",
        "description": "Modify clinical or financial records"
      },
      {
        "type": "assertion",
        "description": "Verify modification is logged with user, timestamp and change details"
      }
    ]
  },
  {
    "id": "TC015",
    "title": "System Load Time and Offline Support",
    "description": "Verify that application meets load time requirements with Progressive Web App offline support, maintaining functionality during disconnected states.",
    "category": "performance",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Open the system dashboard under normal network conditions"
      },
      {
        "type": "assertion",
        "description": "Verify load time is within acceptable limits"
      },
      {
        "type": "action",
        "description": "Turn off network connection and operate offline"
      },
      {
        "type": "assertion",
        "description": "Verify offline access to cached data and basic functionalities"
      },
      {
        "type": "action",
        "description": "Reconnect network and verify data sync"
      },
      {
        "type": "assertion",
        "description": "Verify offline data is synchronized with backend without loss"
      }
    ]
  },
  {
    "id": "TC016",
    "title": "End-to-End Integration Test for Critical Flows",
    "description": "Check that full workflows for login, appointment scheduling, patient record management, clinical documentation, AI assistance, and payments operate correctly end-to-end.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as a Physiotherapist user"
      },
      {
        "type": "action",
        "description": "Schedule a new appointment for an existing patient"
      },
      {
        "type": "action",
        "description": "Access the patient’s medical record and add new clinical documentation"
      },
      {
        "type": "action",
        "description": "Request an AI-generated report for the patient"
      },
      {
        "type": "action",
        "description": "Verify AI suggestions and finalize clinical note"
      },
      {
        "type": "action",
        "description": "Generate an invoice and process patient payment"
      },
      {
        "type": "assertion",
        "description": "Verify all steps complete successfully and data is consistent across modules"
      }
    ]
  }
]
