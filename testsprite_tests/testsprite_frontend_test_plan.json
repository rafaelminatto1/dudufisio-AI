[
  {
    "id": "TC001",
    "title": "Patient Management - Create Patient Success",
    "description": "Verify that a new patient can be created successfully with valid data and that the patient data is persisted correctly.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the patient creation form."
      },
      {
        "type": "action",
        "description": "Input valid name, email, phone number, birth date, and medical history entries."
      },
      {
        "type": "action",
        "description": "Submit the patient creation form."
      },
      {
        "type": "assertion",
        "description": "Check API returns a 201 status and the patient is listed with correct details."
      },
      {
        "type": "assertion",
        "description": "Verify patient medical history is saved and retrievable."
      }
    ]
  },
  {
    "id": "TC002",
    "title": "Patient Management - Create Patient Validation Failure",
    "description": "Ensure that patient creation fails with appropriate error messages when required fields are missing or invalid.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the patient creation form."
      },
      {
        "type": "action",
        "description": "Input invalid email format and leave required fields blank."
      },
      {
        "type": "action",
        "description": "Submit the patient creation form."
      },
      {
        "type": "assertion",
        "description": "Verify validation errors are displayed for each invalid or missing field."
      },
      {
        "type": "assertion",
        "description": "Check that the patient is not created in the system."
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Patient Management - Update Patient Record",
    "description": "Validate that updating existing patient details works correctly and persists changes.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Search and select an existing patient from patient list."
      },
      {
        "type": "action",
        "description": "Modify patient details including updating medical history."
      },
      {
        "type": "action",
        "description": "Submit the update form."
      },
      {
        "type": "assertion",
        "description": "Confirm changes are saved and reflected in the patient detail view."
      },
      {
        "type": "assertion",
        "description": "Verify medical history maintains complete history including updates."
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Patient Management - Delete Patient",
    "description": "Test deleting a patient record removes the patient from the system and maintains data integrity.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to patient list and select a patient."
      },
      {
        "type": "action",
        "description": "Initiate delete patient action and confirm the deletion."
      },
      {
        "type": "assertion",
        "description": "Verify the patient no longer appears in patient list and cannot be retrieved via API."
      },
      {
        "type": "assertion",
        "description": "Check that related clinical documentation or appointments are handled appropriately."
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Appointment Scheduling - Create Appointment Success",
    "description": "Validate creating an appointment succeeds if no conflicts exist and appointment data is correct.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Access appointment scheduling interface."
      },
      {
        "type": "action",
        "description": "Select patient, therapist, date and time with valid inputs."
      },
      {
        "type": "action",
        "description": "Create the appointment."
      },
      {
        "type": "assertion",
        "description": "Confirm appointment is created and visible on the calendar."
      },
      {
        "type": "assertion",
        "description": "Check API returns 201 status with correct appointment details."
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Appointment Scheduling - Prevent Scheduling Conflicts",
    "description": "Ensure the system detects and prevents creating overlapping appointments for the same therapist or patient.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Create an appointment for a therapist at a specific time slot."
      },
      {
        "type": "action",
        "description": "Attempt to create a second appointment overlapping the same therapistâ€™s time slot."
      },
      {
        "type": "assertion",
        "description": "Verify the system blocks appointment creation and shows conflict error."
      },
      {
        "type": "action",
        "description": "Attempt to schedule overlapping appointment for the same patient with a different therapist."
      },
      {
        "type": "assertion",
        "description": "Verify patient scheduling conflict is detected and prevented."
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Appointment Scheduling - Support Recurring Appointments",
    "description": "Validate recurring appointment creation, modification, and deletion functionality works correctly.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Create an appointment with a recurrence rule (e.g., weekly for 4 weeks)."
      },
      {
        "type": "assertion",
        "description": "Verify all occurrences appear on the calendar correctly."
      },
      {
        "type": "action",
        "description": "Update one occurrence of the recurring appointment."
      },
      {
        "type": "assertion",
        "description": "Confirm only the targeted occurrence is updated."
      },
      {
        "type": "action",
        "description": "Delete the entire recurring series."
      },
      {
        "type": "assertion",
        "description": "Check that all occurrences are removed from the calendar."
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Clinical Documentation - Rich Text Editor Auto-Save",
    "description": "Verify clinical notes are auto-saved periodically and recoverable after navigation or intermittent connectivity loss.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open a clinical documentation form with rich-text editor."
      },
      {
        "type": "action",
        "description": "Enter clinical notes with rich text formatting."
      },
      {
        "type": "action",
        "description": "Wait for auto-save interval or simulate intermittent connectivity loss."
      },
      {
        "type": "assertion",
        "description": "Verify content is auto-saved and no data loss occurs after navigation."
      },
      {
        "type": "action",
        "description": "Reload the page or reopen the document."
      },
      {
        "type": "assertion",
        "description": "Check that the previously entered notes are restored correctly."
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Clinical Documentation - Version History Management",
    "description": "Ensure previous versions of clinical notes are stored and can be viewed or restored.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Create and save a clinical note."
      },
      {
        "type": "action",
        "description": "Modify and save the clinical note multiple times."
      },
      {
        "type": "assertion",
        "description": "Verify version history contains all saved versions."
      },
      {
        "type": "action",
        "description": "View and restore an earlier version."
      },
      {
        "type": "assertion",
        "description": "Confirm that the restored version replaces the current document content."
      }
    ]
  },
  {
    "id": "TC010",
    "title": "AI Assistant - Generate Clinical Reports",
    "description": "Test that clinical AI assistant returns accurate and relevant clinical reports based on provided patient and note data.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Input valid clinical data for AI analysis."
      },
      {
        "type": "action",
        "description": "Request AI-generated report via AI assistant interface."
      },
      {
        "type": "assertion",
        "description": "Verify AI returns a report text with relevant analysis and recommendations."
      },
      {
        "type": "assertion",
        "description": "Check response time is within acceptable limits."
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Authentication - Successful Login",
    "description": "Verify users can login successfully with valid credentials and receive appropriate token and role information.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page."
      },
      {
        "type": "action",
        "description": "Input valid email and password for an existing user."
      },
      {
        "type": "action",
        "description": "Submit the login form."
      },
      {
        "type": "assertion",
        "description": "Confirm login success, redirection to dashboard, and correct role-based access is granted."
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Authentication - Login Failure Invalid Credentials",
    "description": "Ensure login fails with incorrect credentials and appropriate error messages are shown.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page."
      },
      {
        "type": "action",
        "description": "Input invalid email or password."
      },
      {
        "type": "action",
        "description": "Submit the login form."
      },
      {
        "type": "assertion",
        "description": "Verify error message indicating login failure is displayed."
      },
      {
        "type": "assertion",
        "description": "Ensure no authentication token is granted."
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Payment Processing - Process Payment with Valid Data",
    "description": "Validate that payments are processed successfully using each supported provider (Stripe, Mercado Pago, PIX) with valid input data.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Select payment provider (Stripe)."
      },
      {
        "type": "action",
        "description": "Input valid payment amount and payment details."
      },
      {
        "type": "action",
        "description": "Submit payment."
      },
      {
        "type": "assertion",
        "description": "Confirm payment is processed with a success response."
      },
      {
        "type": "action",
        "description": "Repeat the test for Mercado Pago and PIX payment providers."
      },
      {
        "type": "assertion",
        "description": "Verify each provider processes payment correctly."
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Payment Processing - Handle Payment Failure",
    "description": "Ensure proper error handling occurs when payment fails due to invalid data or declined transactions.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to process payment with invalid amount or invalid payment details."
      },
      {
        "type": "assertion",
        "description": "Verify user receives clear error messages indicating payment failure."
      },
      {
        "type": "assertion",
        "description": "Check no payment is erroneously recorded as successful."
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Patient Portal - Secure Access and Data Visibility",
    "description": "Verify patients can securely login to the portal and view only their personal data, appointments, and prescribed exercises.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Patient attempts login with valid credentials."
      },
      {
        "type": "assertion",
        "description": "Confirm successful authentication and access to patient portal."
      },
      {
        "type": "assertion",
        "description": "Verify displayed data corresponds only to the logged-in patient."
      },
      {
        "type": "action",
        "description": "Attempt to access other patients' data directly via UI or API."
      },
      {
        "type": "assertion",
        "description": "Ensure access is denied and no unauthorized data is visible."
      }
    ]
  },
  {
    "id": "TC016",
    "title": "LGPD Compliance - User Consent Management",
    "description": "Test that user consent for data processing is correctly recorded, can be updated, and audit trails are maintained.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Prompt user for consent during first data access."
      },
      {
        "type": "action",
        "description": "User consents to data processing purpose."
      },
      {
        "type": "assertion",
        "description": "Verify consent approval is recorded successfully in the system."
      },
      {
        "type": "action",
        "description": "User revokes or modifies consent."
      },
      {
        "type": "assertion",
        "description": "Confirm updated consent is recorded and audit trails reflect changes."
      }
    ]
  },
  {
    "id": "TC017",
    "title": "Teleconsultation - Create and Join Session",
    "description": "Validate creation of a teleconsultation session and successful joining with video and audio streams.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Request creation of a WebRTC teleconsultation session."
      },
      {
        "type": "assertion",
        "description": "Verify session ID and token are returned."
      },
      {
        "type": "action",
        "description": "Join the teleconsultation session using provided token."
      },
      {
        "type": "assertion",
        "description": "Confirm video and audio streams are established and functional."
      }
    ]
  },
  {
    "id": "TC018",
    "title": "Dashboard & Reports - Data Accuracy and Export",
    "description": "Test that operational, clinical, and financial data on dashboard and reports are accurate and export functions work.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Access dashboard and view operational, financial, and clinical analytics."
      },
      {
        "type": "assertion",
        "description": "Verify displayed metrics match expected values from data sources."
      },
      {
        "type": "action",
        "description": "Export reports to supported formats."
      },
      {
        "type": "assertion",
        "description": "Confirm export files are generated correctly and contain accurate data."
      }
    ]
  },
  {
    "id": "TC019",
    "title": "Task Management - Create and Track Task Progress",
    "description": "Verify users can create tasks, assign priority, update progress, and receive notifications.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Create a new task with priority and assign it to a user."
      },
      {
        "type": "assertion",
        "description": "Confirm task is listed with correct priority and assignments."
      },
      {
        "type": "action",
        "description": "Update task progress status."
      },
      {
        "type": "assertion",
        "description": "Verify progress updates are saved and reflected in the UI."
      },
      {
        "type": "assertion",
        "description": "Check that assigned user receives notification of task assignment and updates."
      }
    ]
  },
  {
    "id": "TC020",
    "title": "Application Performance - Load and Responsiveness",
    "description": "Test system performance under expected user load including page load times and responsiveness during concurrent actions.",
    "category": "performance",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate multiple users accessing the system concurrently."
      },
      {
        "type": "assertion",
        "description": "Measure and verify page load times meet requirements (e.g., under 3 seconds)."
      },
      {
        "type": "assertion",
        "description": "Confirm UI remains responsive during concurrent data operations such as appointments creation and note editing."
      }
    ]
  },
  {
    "id": "TC021",
    "title": "Error Handling and Logging - Capture and Report",
    "description": "Ensure that application errors are properly captured, logged, and users are shown meaningful error messages.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Trigger errors by sending invalid API requests or simulating application faults."
      },
      {
        "type": "assertion",
        "description": "Verify errors are logged in monitoring system."
      },
      {
        "type": "assertion",
        "description": "Confirm user receives friendly error messages without sensitive system information."
      }
    ]
  }
]
