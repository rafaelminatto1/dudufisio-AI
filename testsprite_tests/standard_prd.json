{
  "meta": {
    "project": "DuduFisio-AI",
    "date": "2025-09-13",
    "prepared_by": "Generated by Software Development Manager"
  },
  "product_overview": "DuduFisio-AI is a comprehensive management system designed for physiotherapy clinics that integrates traditional clinical management features with advanced Artificial Intelligence to enhance patient care, clinical documentation, and overall operational efficiency.",
  "core_goals": [
    "Digitize and automate physiotherapy clinical processes",
    "Enhance clinical documentation quality using AI",
    "Increase operational efficiency and patient satisfaction"
  ],
  "key_features": [
    "Comprehensive patient management with detailed medical history and interactive body maps",
    "Robust scheduling system with conflict prevention, recurrence, and professional availability management",
    "Clinical documentation system with rich text SOAP notes, auto-save, version history, and customizable templates",
    "AI assistant powered by Google Gemini for report generation, treatment protocol suggestions, risk analysis, and clinical consultations",
    "Extensive exercise library with multimedia, personalized prescriptions, and safety alerts",
    "Dedicated patient portal offering secure access to personal data, exercises, appointments, and communication channels",
    "Dynamic dashboards and analytics with clinical, financial, and operational metrics and customizable reports",
    "Complete financial management including transaction control, payment integrations, and delinquency tracking",
    "Inventory management with stock monitoring, alerts, and categorization",
    "Kanban-style task management with prioritization, notifications, and progress tracking",
    "Integrated teleconsultation with video, chat, and session recording capabilities",
    "Full audit and logging system ensuring compliance with LGPD and security standards"
  ],
  "user_flow_summary": [
    "User authentication with role-based access: Admin, Physiotherapist, Intern, Patient, Physical Educator",
    "Patient registration and profile management including medical history and attachments",
    "Scheduling appointments with conflict detection, recurrence options, and notifications",
    "Clinical session documentation with SOAP note entry, auto-save, templates, and AI-generated reports",
    "AI assistant interaction for clinical insights and protocol recommendations",
    "Exercise library browsing, selection, and personalized prescription",
    "Patient portal access to view history, exercises, appointments, and communicate with clinic",
    "Financial operations tracking including payments, reports, and delinquency management",
    "Inventory checks with alerts for low stock items",
    "Task creation, assignment, and tracking via Kanban board interface",
    "Teleconsultation session initiation and management with video and chat tools",
    "Notification center for alerts and reminders management"
  ],
  "validation_criteria": [
    "System supports multi-role authentication with secure session management and role-based permissions",
    "Patient management supports advanced search, duplicate prevention, secure media uploads, and interactive body mapping",
    "Scheduling system prevents appointment conflicts, supports recurring booking, and sends notifications",
    "Clinical documentation features work with rich text editor, autosave, version control, and AI-generated reports",
    "AI assistant provides accurate treatment suggestions, protocol recommendations, risk analysis, and clinical Q&A",
    "Exercise library correctly categorizes, displays multimedia, allows prescriptions, and flags contraindications",
    "Patient portal provides secure, personalized access to personal data, exercise plans, and communication with clinic",
    "Dashboards display real-time clinical, financial, and operational data with export capability",
    "Financial management accurately records transactions, integrates payments, and reports delinquency",
    "Inventory system tracks stock levels, provides alerts for low inventory, and maintains movement history",
    "Task management supports creation, prioritization, notifications, and progress tracking in Kanban style",
    "Teleconsultation enables video calls, chat, session recording, and session summaries",
    "Audit logs capture user actions, access, and conform to LGPD requirements"
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "React 19.1.1",
      "Vite",
      "React Router DOM",
      "Tailwind CSS",
      "Radix UI",
      "Supabase",
      "Google Gemini AI",
      "Jest 30.1.3",
      "Framer Motion",
      "Recharts",
      "React Hook Form",
      "Zod",
      "Lucide React",
      "HTML5",
      "CSS3",
      "JavaScript ES6+",
      "Node.js",
      "PostgreSQL",
      "Redis",
      "Docker",
      "@testing-library/react",
      "@testing-library/user-event"
    ],
    "features": [
      {
        "name": "Sistema de Autenticação e Autorização",
        "description": "Sistema completo de autenticação com diferentes níveis de acesso (Admin, Fisioterapeuta, Estagiário, Paciente, Educador Físico) baseado em roles e permissões",
        "files": [
          "components/auth/AuthProvider.tsx",
          "components/auth/UserMenu.tsx",
          "contexts/AuthContext.tsx",
          "components/ProtectedRoute.tsx",
          "services/authService.ts",
          "lib/auth.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Authentication API",
            "version": "1.0.0",
            "description": "API para autenticação e autorização de usuários"
          },
          "paths": {
            "/auth/login": {
              "post": {
                "summary": "Login de usuário",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Login bem-sucedido",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "object"
                            },
                            "token": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Gestão de Pacientes",
        "description": "Sistema completo de cadastro, visualização e gestão de pacientes com histórico médico, alertas, comunicação e mapa corporal interativo",
        "files": [
          "pages/PatientListPage.tsx",
          "pages/PatientDetailPage.tsx",
          "components/PatientFormModal.tsx",
          "components/PatientTooltip.tsx",
          "components/pacientes/PatientList.tsx",
          "services/patientService.ts",
          "hooks/usePatients.ts",
          "types/patient.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Patient Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/pacientes": {
              "get": {
                "summary": "Listar pacientes",
                "responses": {
                  "200": {
                    "description": "Lista de pacientes",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Patient"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "post": {
                "summary": "Criar novo paciente",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Patient"
                      }
                    }
                  }
                }
              }
            }
          },
          "components": {
            "schemas": {
              "Patient": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "nome": {
                    "type": "string"
                  },
                  "cpf": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "telefone": {
                    "type": "string"
                  },
                  "dataNascimento": {
                    "type": "string"
                  },
                  "endereco": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Sistema de Agendamento",
        "description": "Calendário completo com agendamentos, recorrência, prevenção de conflitos e gestão de disponibilidade de profissionais",
        "files": [
          "pages/AgendaPage.tsx",
          "components/AgendaTimeline.tsx",
          "components/AppointmentCard.tsx",
          "components/AppointmentDetailModal.tsx",
          "components/AppointmentFormModal.tsx",
          "components/AppointmentTimeline.tsx",
          "components/agenda/BookingModal.tsx",
          "components/agenda/PatientSearchInput.tsx",
          "services/appointmentService.ts",
          "services/availabilityService.ts",
          "services/scheduling/recurrenceService.ts",
          "services/scheduling/conflictDetection.ts",
          "hooks/useAppointments.ts",
          "types/appointment.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Appointment Scheduling API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/appointments": {
              "get": {
                "summary": "Listar agendamentos",
                "parameters": [
                  {
                    "name": "date",
                    "in": "query",
                    "schema": {
                      "type": "string"
                    }
                  }
                ]
              },
              "post": {
                "summary": "Criar novo agendamento",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Appointment"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Dashboard e Analytics",
        "description": "Dashboards com métricas, KPIs, gráficos e análises clínicas e financeiras em tempo real",
        "files": [
          "pages/DashboardPage.tsx",
          "pages/ClinicalAnalyticsPage.tsx",
          "pages/FinancialDashboardPage.tsx",
          "components/dashboard/KPICards.tsx",
          "components/dashboard/AppointmentHeatmap.tsx",
          "components/dashboard/TeamProductivityChart.tsx",
          "components/dashboard/StatCard.tsx",
          "components/dashboard/PatientFlowChart.tsx",
          "components/dashboard/RevenueChart.tsx",
          "components/analytics/ClinicalAnalyticsDashboard.tsx",
          "components/analytics/MetricCard.tsx",
          "services/dashboardService.ts",
          "hooks/useDashboardStats.ts",
          "hooks/useClinicalAnalytics.ts",
          "hooks/useFinancialData.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Dashboard Analytics API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/dashboard/stats": {
              "get": {
                "summary": "Obter estatísticas do dashboard",
                "responses": {
                  "200": {
                    "description": "Estatísticas do dashboard",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "totalPatients": {
                              "type": "number"
                            },
                            "totalAppointments": {
                              "type": "number"
                            },
                            "revenue": {
                              "type": "number"
                            },
                            "productivity": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Acompanhamento Clínico e SOAP",
        "description": "Sistema de acompanhamento de sessões, notas SOAP com auto-save, evolução e documentação clínica completa",
        "files": [
          "pages/AcompanhamentoPage.tsx",
          "components/NewSoapNoteModal.tsx",
          "components/ClinicalHistoryTimeline.tsx",
          "components/acompanhamento/AiSuggestionModal.tsx",
          "components/acompanhamento/AlertCard.tsx",
          "components/acompanhamento/ObservationModal.tsx",
          "services/acompanhamentoService.ts",
          "services/soapNoteService.ts",
          "services/treatmentService.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Clinical Documentation API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/soap-notes": {
              "post": {
                "summary": "Criar nota SOAP",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "patientId": {
                            "type": "string"
                          },
                          "subjective": {
                            "type": "string"
                          },
                          "objective": {
                            "type": "string"
                          },
                          "assessment": {
                            "type": "string"
                          },
                          "plan": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Inteligência Artificial - Google Gemini",
        "description": "Integração com Google Gemini AI para sugestões clínicas, geração de laudos, análise de risco e assistente inteligente",
        "files": [
          "services/geminiService.ts",
          "services/ai/aiOrchestratorService.ts",
          "services/ai/knowledgeService.ts",
          "services/ai/cacheService.ts",
          "services/ai-economica/aiService.ts",
          "services/ai-economica/aiProviders.ts",
          "services/ai-economica/knowledgeBaseService.ts",
          "pages/HepGeneratorPage.tsx",
          "pages/RiskAnalysisPage.tsx",
          "pages/EvaluationReportPage.tsx",
          "pages/SessionEvolutionPage.tsx",
          "components/ProtocolSuggestionModal.tsx",
          "components/AiAssistant.tsx",
          "hooks/useEconomicAiAnalytics.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "AI Assistant API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/ai/generate-report": {
              "post": {
                "summary": "Gerar relatório usando IA",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "patientData": {
                            "type": "object"
                          },
                          "sessionNotes": {
                            "type": "string"
                          },
                          "reportType": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/api/ai/suggest-protocol": {
              "post": {
                "summary": "Sugerir protocolo de tratamento",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "condition": {
                            "type": "string"
                          },
                          "patientHistory": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Biblioteca de Exercícios",
        "description": "Sistema completo de exercícios com categorias, vídeos, prescrições personalizadas e avaliações",
        "files": [
          "pages/ExerciseLibraryPage.tsx",
          "components/ExerciseCard.tsx",
          "components/ExerciseFormModal.tsx",
          "services/exerciseService.ts",
          "services/exerciseLibraryService.ts",
          "hooks/useExercises.ts",
          "hooks/useExerciseLibrary.ts",
          "types/exercise.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Exercise Library API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/exercises": {
              "get": {
                "summary": "Listar exercícios",
                "parameters": [
                  {
                    "name": "category",
                    "in": "query",
                    "schema": {
                      "type": "string"
                    }
                  }
                ]
              },
              "post": {
                "summary": "Criar novo exercício",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "category": {
                            "type": "string"
                          },
                          "videoUrl": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Portal do Paciente",
        "description": "Portal dedicado para pacientes com dashboard, exercícios prescritos, gamificação, documentos e comunicação",
        "files": [
          "layouts/PatientPortalLayout.tsx",
          "pages/patient-portal/PatientDashboardPage.tsx",
          "pages/patient-portal/PatientPainDiaryPage.tsx",
          "pages/patient-portal/PatientProgressPage.tsx",
          "pages/patient-portal/VoucherStorePage.tsx",
          "pages/patient-portal/MyVouchersPage.tsx",
          "pages/patient-portal/GamificationPage.tsx",
          "pages/patient-portal/MyAppointmentsPage.tsx",
          "pages/patient-portal/DocumentsPage.tsx",
          "pages/patient-portal/MyExercisesPage.tsx",
          "services/gamificationService.ts",
          "services/voucherService.ts",
          "hooks/useGamification.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Patient Portal API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/patient-portal/dashboard": {
              "get": {
                "summary": "Dashboard do paciente",
                "responses": {
                  "200": {
                    "description": "Dados do dashboard do paciente"
                  }
                }
              }
            },
            "/api/patient-portal/exercises": {
              "get": {
                "summary": "Exercícios prescritos",
                "responses": {
                  "200": {
                    "description": "Lista de exercícios do paciente"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Gestão Financeira",
        "description": "Sistema completo de gestão financeira com transações, relatórios, análises e controle de pagamentos",
        "files": [
          "pages/FinancialDashboardPage.tsx",
          "components/financial/FinancialDashboard.tsx",
          "components/financial/TransactionForm.tsx",
          "services/financialService.ts",
          "hooks/useFinancialData.ts",
          "types/financial.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Financial Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/financial/transactions": {
              "get": {
                "summary": "Listar transações",
                "parameters": [
                  {
                    "name": "dateFrom",
                    "in": "query",
                    "schema": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "dateTo",
                    "in": "query",
                    "schema": {
                      "type": "string"
                    }
                  }
                ]
              }
            }
          }
        }
      },
      {
        "name": "Sistema de Notificações",
        "description": "Centro de notificações com diferentes tipos de alertas, lembretes e comunicação automática",
        "files": [
          "pages/NotificationCenterPage.tsx",
          "components/events/NotificationCard.tsx",
          "components/events/NotificationList.tsx",
          "services/notificationService.ts",
          "hooks/useNotifications.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Notification System API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/notifications": {
              "get": {
                "summary": "Listar notificações",
                "responses": {
                  "200": {
                    "description": "Lista de notificações do usuário"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Sistema Kanban de Tarefas",
        "description": "Quadro de tarefas estilo Kanban para gestão de projetos, atividades e fluxo de trabalho",
        "files": [
          "pages/KanbanPage.tsx",
          "components/TaskCard.tsx",
          "components/TaskFormModal.tsx",
          "services/taskService.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Task Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/tasks": {
              "get": {
                "summary": "Listar tarefas",
                "responses": {
                  "200": {
                    "description": "Lista de tarefas organizadas por status"
                  }
                }
              },
              "post": {
                "summary": "Criar nova tarefa",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "priority": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Gestão de Estoque",
        "description": "Sistema completo de controle de estoque, suprimentos e alertas de níveis mínimos",
        "files": [
          "pages/InventoryDashboardPage.tsx",
          "components/inventory/InventoryDashboard.tsx",
          "components/inventory/InventoryItemCard.tsx",
          "components/inventory/StockMovementModal.tsx",
          "components/inventory/InventoryAlerts.tsx",
          "services/inventoryService.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Inventory Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/inventory": {
              "get": {
                "summary": "Listar itens do estoque",
                "responses": {
                  "200": {
                    "description": "Lista de itens com quantidades"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Sistema de Relatórios",
        "description": "Geração de relatórios médicos, financeiros e operacionais com exportação em PDF e CSV",
        "files": [
          "pages/ReportsPage.tsx",
          "pages/MedicalReportPage.tsx",
          "components/reports/MedicalReportForm.tsx",
          "components/reports/FinancialReport.tsx",
          "components/reports/ClinicalReport.tsx",
          "services/reportService.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Reports API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/reports/generate": {
              "post": {
                "summary": "Gerar relatório",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "format": {
                            "type": "string"
                          },
                          "dateRange": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Teleconsulta",
        "description": "Sistema de consultas online com integração de vídeo, chat e gravação de sessões",
        "files": [
          "pages/TeleconsultaPage.tsx",
          "components/teleconsulta/VideoCallInterface.tsx",
          "components/teleconsulta/TeleconsultaControls.tsx",
          "components/teleconsulta/PatientInfo.tsx",
          "components/teleconsulta/NotesPanel.tsx",
          "components/teleconsulta/RecordingControls.tsx",
          "components/teleconsulta/SessionSummary.tsx",
          "components/teleconsulta/TeleconsultaChat.tsx",
          "components/VideoPlayerModal.tsx"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Teleconsultation API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/teleconsulta/start": {
              "post": {
                "summary": "Iniciar teleconsulta",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "patientId": {
                            "type": "string"
                          },
                          "therapistId": {
                            "type": "string"
                          },
                          "scheduledTime": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Sistema de Auditoria e Logs",
        "description": "Log de auditoria completo para rastreamento de ações, conformidade LGPD e segurança",
        "files": [
          "pages/AuditLogPage.tsx",
          "hooks/useAuditLogs.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Audit Logs API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/audit-logs": {
              "get": {
                "summary": "Listar logs de auditoria",
                "parameters": [
                  {
                    "name": "userId",
                    "in": "query",
                    "schema": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "action",
                    "in": "query",
                    "schema": {
                      "type": "string"
                    }
                  }
                ]
              }
            }
          }
        }
      }
    ]
  }
}
