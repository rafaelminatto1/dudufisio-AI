{
  "tech_stack": [
    "TypeScript",
    "React 18",
    "Vite",
    "Supabase",
    "PostgreSQL",
    "shadcn/ui",
    "TailwindCSS",
    "React Router",
    "React Hook Form",
    "Zod",
    "Framer Motion",
    "Playwright",
    "Jest"
  ],
  "features": [
    {
      "name": "Authentication System",
      "description": "Sistema de autenticação com Supabase, suporte a OAuth (Google, GitHub), 2FA e controle de roles",
      "files": [
        "contexts/SupabaseAuthContext.tsx",
        "services/auth/supabaseAuthService.ts",
        "pages/auth/LoginPage.tsx",
        "pages/auth/TwoFactorSetupPage.tsx",
        "types/auth.ts"
      ]
    },
    {
      "name": "Medical Records System",
      "description": "Sistema completo de prontuário eletrônico médico com padrões HL7 FHIR, assinatura digital e compliance CFM/COFFITO/LGPD",
      "files": [
        "components/medical-records/MedicalRecordsSystem.tsx",
        "components/medical-records/MedicalRecordsDashboard.tsx",
        "components/medical-records/AssessmentForm.tsx",
        "components/medical-records/EvolutionEditor.tsx",
        "components/medical-records/ClinicalTimeline.tsx",
        "components/medical-records/ClinicalTemplatesManager.tsx",
        "components/medical-records/DigitalSignatureManager.tsx",
        "components/medical-records/ClinicalReportsGenerator.tsx",
        "lib/medical-records/fhir/resources/Patient.ts",
        "lib/medical-records/fhir/resources/Encounter.ts",
        "lib/medical-records/clinical/assessment/InitialAssessment.ts",
        "lib/medical-records/clinical/evolution/SessionEvolution.ts",
        "lib/medical-records/compliance/CFMValidator.ts",
        "lib/medical-records/compliance/COFFITOValidator.ts",
        "lib/medical-records/compliance/LGPDCompliance.ts"
      ]
    },
    {
      "name": "Dashboard System",
      "description": "Sistema de dashboards multi-role com interfaces específicas para pacientes, terapeutas e administradores",
      "files": [
        "pages/CompleteDashboard.tsx",
        "pages/PatientPortalDashboard.tsx",
        "pages/PartnerPortalDashboard.tsx",
        "components/dashboard/AdminDashboard.tsx",
        "components/dashboard/TherapistDashboard.tsx",
        "components/dashboard/PatientDashboard.tsx"
      ]
    },
    {
      "name": "Appointment Management",
      "description": "Sistema de agendamento com calendário, check-in/check-out, notificações e gestão de sessões",
      "files": [
        "components/appointment/AppointmentCalendar.tsx",
        "components/appointment/AppointmentForm.tsx",
        "components/appointment/CheckInSystem.tsx",
        "services/appointmentService.ts",
        "hooks/useAppointments.ts",
        "hooks/useCalendar.ts"
      ]
    },
    {
      "name": "AI Integration",
      "description": "Integração com Google Gemini AI para prescrições inteligentes, análise de dados e assistência clínica",
      "files": [
        "services/ai/geminiService.ts",
        "services/ai/prescriptionService.ts",
        "components/ai/AIPrescriptionAssistant.tsx",
        "components/ai/ClinicalAnalysisPanel.tsx",
        "hooks/useAI.ts"
      ]
    },
    {
      "name": "Communication System",
      "description": "Sistema de comunicação com WhatsApp Business, email (Resend), SMS (Twilio) e notificações push",
      "files": [
        "services/communication/whatsappService.ts",
        "services/communication/emailService.ts",
        "services/communication/smsService.ts",
        "services/communication/notificationService.ts",
        "components/communication/WhatsAppIntegration.tsx",
        "components/communication/NotificationCenter.tsx"
      ]
    },
    {
      "name": "Payment System",
      "description": "Sistema de pagamentos integrado com Stripe, Mercado Pago e PIX para cobrança de consultas",
      "files": [
        "services/payment/stripeService.ts",
        "services/payment/mercadopagoService.ts",
        "services/payment/pixService.ts",
        "components/payment/PaymentForm.tsx",
        "components/payment/InvoiceGenerator.tsx",
        "hooks/usePayments.ts"
      ]
    },
    {
      "name": "Analytics and BI",
      "description": "Sistema de business intelligence com métricas clínicas, relatórios financeiros e analytics avançados",
      "files": [
        "services/analytics/biService.ts",
        "components/analytics/ClinicalMetrics.tsx",
        "components/analytics/FinancialReports.tsx",
        "components/analytics/PatientAnalytics.tsx",
        "components/analytics/PerformanceDashboard.tsx",
        "hooks/useAnalytics.ts"
      ]
    },
    {
      "name": "Patient Management",
      "description": "Gestão completa de pacientes com prontuários, histórico médico, documentos e comunicação",
      "files": [
        "components/patient/PatientForm.tsx",
        "components/patient/PatientProfile.tsx",
        "components/patient/PatientHistory.tsx",
        "components/patient/PatientDocuments.tsx",
        "services/patientService.ts",
        "hooks/usePatients.ts"
      ]
    },
    {
      "name": "Template System",
      "description": "Sistema de templates dinâmicos para formulários clínicos, relatórios e documentos",
      "files": [
        "components/templates/TemplateEditor.tsx",
        "components/templates/TemplateManager.tsx",
        "services/templateService.ts",
        "lib/templates/clinicalTemplates.ts",
        "lib/templates/reportTemplates.ts"
      ]
    },
    {
      "name": "Integration Tests",
      "description": "Sistema de testes automatizados com Playwright para validação end-to-end",
      "files": [
        "tests/e2e/login.spec.ts",
        "tests/e2e/appointment.spec.ts",
        "tests/e2e/medical-records.spec.ts",
        "tests/e2e/payment.spec.ts",
        "playwright.config.ts"
      ]
    },
    {
      "name": "Security and Compliance",
      "description": "Sistema de segurança com RLS, auditoria, criptografia e compliance LGPD",
      "files": [
        "lib/security/encryptionService.ts",
        "lib/security/auditService.ts",
        "lib/security/rlsPolicies.ts",
        "services/security/complianceService.ts",
        "hooks/useSecurity.ts"
      ]
    },
    {
      "name": "Notification System",
      "description": "Sistema de notificações com Service Workers, push notifications e email alerts",
      "files": [
        "services/notification/pushNotificationService.ts",
        "components/notification/NotificationToast.tsx",
        "components/notification/NotificationCenter.tsx",
        "hooks/useNotifications.ts",
        "sw.js"
      ]
    },
    {
      "name": "File Management",
      "description": "Sistema de gestão de arquivos com upload, storage seguro e versionamento",
      "files": [
        "services/storage/fileUploadService.ts",
        "components/files/FileUploader.tsx",
        "components/files/FileManager.tsx",
        "hooks/useFileUpload.ts"
      ]
    },
    {
      "name": "Configuration Management",
      "description": "Sistema de configurações centralizadas para ambiente, features flags e settings",
      "files": [
        "lib/config/appConfig.ts",
        "lib/config/featureFlags.ts",
        "contexts/AppContext.tsx",
        "services/configService.ts"
      ]
    }
  ]
}